#Predicts on images in a source folder and filters the ones that match the class name entered by user.
+ Uses GPU accelerated inference.

from ultralytics import YOLO
import os
import shutil
import time


source = ""
destination = ""
model = YOLO("")

num_list = ['1', '10', '100', '103', '104', '105', '106', '11', '111', '112', '113', '114', '115', '117', '118', '12', '123', '126', '128', '13', '132', '133', '137', '14', '145', '147', '15', '150', '151', '153', '159', '16', '160', '162', '164', '165', '166', '17', '171', '172', '174', '178', '18', '180', '182', '188', '189', '19', '191', '199', '2', '20', '202', '204', '209', '21', '210', '211', '215', '217', '22', '222', '225', '226', '227', '23', '231', '235', '238', '24', '241', '243', '247', '25', '252', '257', '26', '266', '267', '27', '270', '272', '273', '275', '277', '28', '286', '29', '290', '291', '295', '298', '299', '3', '30', '309', '31', '310', '311', '313', '315', '317', '318', '32', '323', '325', '33', '332', '338', '340', '346', '348', '35', '355', '36', '37', '376', '38', '39', '392', '394', '4', '40', '404', '41', '410', '411', '414', '42', '421', '427', '428', '43', '44', '445', '45', '46', '47', '474', '48', '480', '49', '5', '50', '504', '51', '514', '518', '521', '523', '53', '532', '547', '549', '55', '555', '557', '56', '57', '58', '585', '59', '599', '6', '609', '61', '612', '613', '616', '62', '622', '627', '65', '650', '66', '666', '673', '687', '69', '690', '7', '71', '710', '711', '72', '724', '725', '74', '742', '768', '77', '775', '782', '789', '79', '8', '80', '81', '818', '82', '823', '826', '829', '83', '84', '85', '852', '86', '875', '876', '877', '88', '89', '893', '9', '914', '915', '916', '94', '95', '952', '96', '97', '972', '99', '997', '999']
user_input = input("Enter a number: ") 
if user_input in num_list:
    class_name = num_list.index(user_input)
    print(f"{user_input} has a txt_label of: {class_name}\n"
          f"Filtering images that contain number {user_input}")
else:
    print("Number not found in list.")
    exit()

for image_name in os.listdir(source):
    image_path = os.path.join(source, image_name)
    results = model(image_path, conf=0.01, save=False)
    boxes = results[0].boxes
    for box in boxes:
        if box.cls == (class_name):
            shutil.move(image_path, os.path.join(destination, image_name))
            print(f"Filtered and moved: {image_name}")
            break
    time.sleep(0.3)
